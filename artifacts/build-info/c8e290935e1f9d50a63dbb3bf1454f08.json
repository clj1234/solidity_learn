{
	"id": "c8e290935e1f9d50a63dbb3bf1454f08",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"stage02/task03/BeggingContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n\r\n// Sepolia合约地址：0x599BC5fB4F6bDc016982424c96A9D0cb6ACD997d\r\n// https://sepolia.etherscan.io/address/0x599bc5fb4f6bdc016982424c96a9d0cb6acd997d#events\r\ncontract BeggingContract is Ownable {\r\n    constructor() Ownable(msg.sender) {}\r\n    mapping (address => uint) donateCountMap;\r\n\r\n    event donation(address indexed donateAddress,uint indexed amount);\r\n\r\n    function donate() public payable {\r\n        donateCountMap[msg.sender] += msg.value;\r\n        emit donation(msg.sender, msg.value);\r\n    }\r\n\r\n    function getDonation(address _address) public view returns (uint) {\r\n        return donateCountMap[_address];\r\n    }\r\n\r\n    function withdraw(address payable to,uint amount) public onlyOwner{\r\n        // payable(owner()).transfer(address(this).balance);\r\n        (bool success,) = to.call{value: amount}(\"\");\r\n        require(success,\"Withdraw failed\");\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"stage02/task03/BeggingContract.sol": {
				"BeggingContract": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "donateAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "donation",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "donate",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "getDonation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"stage02/task03/BeggingContract.sol\":276:993  contract BeggingContract is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"stage02/task03/BeggingContract.sol\":319:355  constructor() Ownable(msg.sender) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"stage02/task03/BeggingContract.sol\":341:351  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_5\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"stage02/task03/BeggingContract.sol\":276:993  contract BeggingContract is Ownable {... */\n  jump(tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_13:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_14:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_19\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_13\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_15:\n    /* \"#utility.yul\":328:352   */\n  tag_21\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_14\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_7:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_23\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_15\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"stage02/task03/BeggingContract.sol\":276:993  contract BeggingContract is Ownable {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"stage02/task03/BeggingContract.sol\":276:993  contract BeggingContract is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x410a1d32\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xed88c68e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf3fef3a3\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      revert(0x00, 0x00)\n        /* \"stage02/task03/BeggingContract.sol\":630:746  function getDonation(address _address) public view returns (uint) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      revert(0x00, 0x00)\n    tag_8:\n      pop\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      revert(0x00, 0x00)\n    tag_15:\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_18\n      jumpi\n      revert(0x00, 0x00)\n    tag_18:\n      pop\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"stage02/task03/BeggingContract.sol\":484:622  function donate() public payable {... */\n    tag_5:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      revert(0x00, 0x00)\n    tag_25:\n      pop\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_27:\n      tag_28\n      jump\t// in\n    tag_26:\n      stop\n        /* \"stage02/task03/BeggingContract.sol\":754:990  function withdraw(address payable to,uint amount) public onlyOwner{... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      revert(0x00, 0x00)\n    tag_29:\n      pop\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"stage02/task03/BeggingContract.sol\":630:746  function getDonation(address _address) public view returns (uint) {... */\n    tag_12:\n        /* \"stage02/task03/BeggingContract.sol\":690:694  uint */\n      0x00\n        /* \"stage02/task03/BeggingContract.sol\":714:728  donateCountMap */\n      0x01\n        /* \"stage02/task03/BeggingContract.sol\":714:738  donateCountMap[_address] */\n      0x00\n        /* \"stage02/task03/BeggingContract.sol\":729:737  _address */\n      dup4\n        /* \"stage02/task03/BeggingContract.sol\":714:738  donateCountMap[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"stage02/task03/BeggingContract.sol\":707:738  return donateCountMap[_address] */\n      swap1\n      pop\n        /* \"stage02/task03/BeggingContract.sol\":630:746  function getDonation(address _address) public view returns (uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_36\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_36:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_39\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_39:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"stage02/task03/BeggingContract.sol\":484:622  function donate() public payable {... */\n    tag_24:\n        /* \"stage02/task03/BeggingContract.sol\":558:567  msg.value */\n      callvalue\n        /* \"stage02/task03/BeggingContract.sol\":528:542  donateCountMap */\n      0x01\n        /* \"stage02/task03/BeggingContract.sol\":528:554  donateCountMap[msg.sender] */\n      0x00\n        /* \"stage02/task03/BeggingContract.sol\":543:553  msg.sender */\n      caller\n        /* \"stage02/task03/BeggingContract.sol\":528:554  donateCountMap[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"stage02/task03/BeggingContract.sol\":528:567  donateCountMap[msg.sender] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"stage02/task03/BeggingContract.sol\":604:613  msg.value */\n      callvalue\n        /* \"stage02/task03/BeggingContract.sol\":592:602  msg.sender */\n      caller\n        /* \"stage02/task03/BeggingContract.sol\":583:614  donation(msg.sender, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdcf384279ea39b6f3a1e3f48d9b09e39e31f61b722ac5ee0417bc0466deec530\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"stage02/task03/BeggingContract.sol\":484:622  function donate() public payable {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_46\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_46:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_48\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_49\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_50\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"stage02/task03/BeggingContract.sol\":754:990  function withdraw(address payable to,uint amount) public onlyOwner{... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_52:\n        /* \"stage02/task03/BeggingContract.sol\":894:906  bool success */\n      0x00\n        /* \"stage02/task03/BeggingContract.sol\":911:913  to */\n      dup3\n        /* \"stage02/task03/BeggingContract.sol\":911:918  to.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"stage02/task03/BeggingContract.sol\":926:932  amount */\n      dup3\n        /* \"stage02/task03/BeggingContract.sol\":911:937  to.call{value: amount}(\"\") */\n      mload(0x40)\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_58\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_57)\n    tag_58:\n      0x60\n      swap2\n      pop\n    tag_57:\n      pop\n        /* \"stage02/task03/BeggingContract.sol\":893:937  (bool success,) = to.call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"stage02/task03/BeggingContract.sol\":956:963  success */\n      dup1\n        /* \"stage02/task03/BeggingContract.sol\":948:982  require(success,\"Withdraw failed\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_59:\n        /* \"stage02/task03/BeggingContract.sol\":820:990  {... */\n      pop\n        /* \"stage02/task03/BeggingContract.sol\":754:990  function withdraw(address payable to,uint amount) public onlyOwner{... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_64\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_66\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_67\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_64\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_67:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_72:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_74:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_75:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_99\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_74\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_76:\n        /* \"#utility.yul\":641:665   */\n      tag_101\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_75\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_102\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_102:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_77:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_104\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_76\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_11:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_106\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_107\n      tag_72\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":917:1036   */\n    tag_106:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_108\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_77\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_78:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_79:\n        /* \"#utility.yul\":1346:1370   */\n      tag_111\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_78\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_14:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_113\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_79\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1729   */\n    tag_80:\n        /* \"#utility.yul\":1698:1722   */\n      tag_115\n        /* \"#utility.yul\":1716:1721   */\n      dup2\n        /* \"#utility.yul\":1698:1722   */\n      tag_75\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":1693:1696   */\n      dup3\n        /* \"#utility.yul\":1686:1723   */\n      mstore\n        /* \"#utility.yul\":1611:1729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:1957   */\n    tag_22:\n        /* \"#utility.yul\":1828:1832   */\n      0x00\n        /* \"#utility.yul\":1866:1868   */\n      0x20\n        /* \"#utility.yul\":1855:1864   */\n      dup3\n        /* \"#utility.yul\":1851:1869   */\n      add\n        /* \"#utility.yul\":1843:1869   */\n      swap1\n      pop\n        /* \"#utility.yul\":1879:1950   */\n      tag_117\n        /* \"#utility.yul\":1947:1948   */\n      0x00\n        /* \"#utility.yul\":1936:1945   */\n      dup4\n        /* \"#utility.yul\":1932:1949   */\n      add\n        /* \"#utility.yul\":1923:1929   */\n      dup5\n        /* \"#utility.yul\":1879:1950   */\n      tag_80\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":1735:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2067   */\n    tag_81:\n        /* \"#utility.yul\":2008:2015   */\n      0x00\n        /* \"#utility.yul\":2037:2061   */\n      tag_119\n        /* \"#utility.yul\":2055:2060   */\n      dup3\n        /* \"#utility.yul\":2037:2061   */\n      tag_74\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":2026:2061   */\n      swap1\n      pop\n        /* \"#utility.yul\":1963:2067   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2073:2211   */\n    tag_82:\n        /* \"#utility.yul\":2154:2186   */\n      tag_121\n        /* \"#utility.yul\":2180:2185   */\n      dup2\n        /* \"#utility.yul\":2154:2186   */\n      tag_81\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":2147:2152   */\n      dup2\n        /* \"#utility.yul\":2144:2187   */\n      eq\n        /* \"#utility.yul\":2134:2205   */\n      tag_122\n      jumpi\n        /* \"#utility.yul\":2201:2202   */\n      0x00\n        /* \"#utility.yul\":2198:2199   */\n      0x00\n        /* \"#utility.yul\":2191:2203   */\n      revert\n        /* \"#utility.yul\":2134:2205   */\n    tag_122:\n        /* \"#utility.yul\":2073:2211   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2217:2372   */\n    tag_83:\n        /* \"#utility.yul\":2271:2276   */\n      0x00\n        /* \"#utility.yul\":2309:2315   */\n      dup2\n        /* \"#utility.yul\":2296:2316   */\n      calldataload\n        /* \"#utility.yul\":2287:2316   */\n      swap1\n      pop\n        /* \"#utility.yul\":2325:2366   */\n      tag_124\n        /* \"#utility.yul\":2360:2365   */\n      dup2\n        /* \"#utility.yul\":2325:2366   */\n      tag_82\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":2217:2372   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2378:2500   */\n    tag_84:\n        /* \"#utility.yul\":2451:2475   */\n      tag_126\n        /* \"#utility.yul\":2469:2474   */\n      dup2\n        /* \"#utility.yul\":2451:2475   */\n      tag_78\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":2444:2449   */\n      dup2\n        /* \"#utility.yul\":2441:2476   */\n      eq\n        /* \"#utility.yul\":2431:2494   */\n      tag_127\n      jumpi\n        /* \"#utility.yul\":2490:2491   */\n      0x00\n        /* \"#utility.yul\":2487:2488   */\n      0x00\n        /* \"#utility.yul\":2480:2492   */\n      revert\n        /* \"#utility.yul\":2431:2494   */\n    tag_127:\n        /* \"#utility.yul\":2378:2500   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2506:2645   */\n    tag_85:\n        /* \"#utility.yul\":2552:2557   */\n      0x00\n        /* \"#utility.yul\":2590:2596   */\n      dup2\n        /* \"#utility.yul\":2577:2597   */\n      calldataload\n        /* \"#utility.yul\":2568:2597   */\n      swap1\n      pop\n        /* \"#utility.yul\":2606:2639   */\n      tag_129\n        /* \"#utility.yul\":2633:2638   */\n      dup2\n        /* \"#utility.yul\":2606:2639   */\n      tag_84\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":2506:2645   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2651:3141   */\n    tag_32:\n        /* \"#utility.yul\":2727:2733   */\n      0x00\n        /* \"#utility.yul\":2735:2741   */\n      0x00\n        /* \"#utility.yul\":2784:2786   */\n      0x40\n        /* \"#utility.yul\":2772:2781   */\n      dup4\n        /* \"#utility.yul\":2763:2770   */\n      dup6\n        /* \"#utility.yul\":2759:2782   */\n      sub\n        /* \"#utility.yul\":2755:2787   */\n      slt\n        /* \"#utility.yul\":2752:2871   */\n      iszero\n      tag_131\n      jumpi\n        /* \"#utility.yul\":2790:2869   */\n      tag_132\n      tag_72\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":2752:2871   */\n    tag_131:\n        /* \"#utility.yul\":2910:2911   */\n      0x00\n        /* \"#utility.yul\":2935:2996   */\n      tag_133\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2935:2996   */\n      tag_83\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":2925:2996   */\n      swap3\n      pop\n        /* \"#utility.yul\":2881:3006   */\n      pop\n        /* \"#utility.yul\":3045:3047   */\n      0x20\n        /* \"#utility.yul\":3071:3124   */\n      tag_134\n        /* \"#utility.yul\":3116:3123   */\n      dup6\n        /* \"#utility.yul\":3107:3113   */\n      dup3\n        /* \"#utility.yul\":3096:3105   */\n      dup7\n        /* \"#utility.yul\":3092:3114   */\n      add\n        /* \"#utility.yul\":3071:3124   */\n      tag_85\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":3061:3124   */\n      swap2\n      pop\n        /* \"#utility.yul\":3016:3134   */\n      pop\n        /* \"#utility.yul\":2651:3141   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3147:3327   */\n    tag_86:\n        /* \"#utility.yul\":3195:3272   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3192:3193   */\n      0x00\n        /* \"#utility.yul\":3185:3273   */\n      mstore\n        /* \"#utility.yul\":3292:3296   */\n      0x11\n        /* \"#utility.yul\":3289:3290   */\n      0x04\n        /* \"#utility.yul\":3282:3297   */\n      mstore\n        /* \"#utility.yul\":3316:3320   */\n      0x24\n        /* \"#utility.yul\":3313:3314   */\n      0x00\n        /* \"#utility.yul\":3306:3321   */\n      revert\n        /* \"#utility.yul\":3333:3524   */\n    tag_44:\n        /* \"#utility.yul\":3373:3376   */\n      0x00\n        /* \"#utility.yul\":3392:3412   */\n      tag_137\n        /* \"#utility.yul\":3410:3411   */\n      dup3\n        /* \"#utility.yul\":3392:3412   */\n      tag_78\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":3387:3412   */\n      swap2\n      pop\n        /* \"#utility.yul\":3426:3446   */\n      tag_138\n        /* \"#utility.yul\":3444:3445   */\n      dup4\n        /* \"#utility.yul\":3426:3446   */\n      tag_78\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":3421:3446   */\n      swap3\n      pop\n        /* \"#utility.yul\":3469:3470   */\n      dup3\n        /* \"#utility.yul\":3466:3467   */\n      dup3\n        /* \"#utility.yul\":3462:3471   */\n      add\n        /* \"#utility.yul\":3455:3471   */\n      swap1\n      pop\n        /* \"#utility.yul\":3490:3493   */\n      dup1\n        /* \"#utility.yul\":3487:3488   */\n      dup3\n        /* \"#utility.yul\":3484:3494   */\n      gt\n        /* \"#utility.yul\":3481:3517   */\n      iszero\n      tag_139\n      jumpi\n        /* \"#utility.yul\":3497:3515   */\n      tag_140\n      tag_86\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":3481:3517   */\n    tag_139:\n        /* \"#utility.yul\":3333:3524   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3530:3677   */\n    tag_87:\n        /* \"#utility.yul\":3631:3642   */\n      0x00\n        /* \"#utility.yul\":3668:3671   */\n      dup2\n        /* \"#utility.yul\":3653:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3530:3677   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3797   */\n    tag_88:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3803:4201   */\n    tag_89:\n        /* \"#utility.yul\":3962:3965   */\n      0x00\n        /* \"#utility.yul\":3983:4066   */\n      tag_144\n        /* \"#utility.yul\":4064:4065   */\n      0x00\n        /* \"#utility.yul\":4059:4062   */\n      dup4\n        /* \"#utility.yul\":3983:4066   */\n      tag_87\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":3976:4066   */\n      swap2\n      pop\n        /* \"#utility.yul\":4075:4168   */\n      tag_145\n        /* \"#utility.yul\":4164:4167   */\n      dup3\n        /* \"#utility.yul\":4075:4168   */\n      tag_88\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":4193:4194   */\n      0x00\n        /* \"#utility.yul\":4188:4191   */\n      dup3\n        /* \"#utility.yul\":4184:4195   */\n      add\n        /* \"#utility.yul\":4177:4195   */\n      swap1\n      pop\n        /* \"#utility.yul\":3803:4201   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4207:4586   */\n    tag_55:\n        /* \"#utility.yul\":4391:4394   */\n      0x00\n        /* \"#utility.yul\":4413:4560   */\n      tag_147\n        /* \"#utility.yul\":4556:4559   */\n      dup3\n        /* \"#utility.yul\":4413:4560   */\n      tag_89\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":4406:4560   */\n      swap2\n      pop\n        /* \"#utility.yul\":4577:4580   */\n      dup2\n        /* \"#utility.yul\":4570:4580   */\n      swap1\n      pop\n        /* \"#utility.yul\":4207:4586   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4592:4761   */\n    tag_90:\n        /* \"#utility.yul\":4676:4687   */\n      0x00\n        /* \"#utility.yul\":4710:4716   */\n      dup3\n        /* \"#utility.yul\":4705:4708   */\n      dup3\n        /* \"#utility.yul\":4698:4717   */\n      mstore\n        /* \"#utility.yul\":4750:4754   */\n      0x20\n        /* \"#utility.yul\":4745:4748   */\n      dup3\n        /* \"#utility.yul\":4741:4755   */\n      add\n        /* \"#utility.yul\":4726:4755   */\n      swap1\n      pop\n        /* \"#utility.yul\":4592:4761   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4767:4932   */\n    tag_91:\n        /* \"#utility.yul\":4907:4924   */\n      0x5769746864726177206661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":4903:4904   */\n      0x00\n        /* \"#utility.yul\":4895:4901   */\n      dup3\n        /* \"#utility.yul\":4891:4905   */\n      add\n        /* \"#utility.yul\":4884:4925   */\n      mstore\n        /* \"#utility.yul\":4767:4932   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4938:5304   */\n    tag_92:\n        /* \"#utility.yul\":5080:5083   */\n      0x00\n        /* \"#utility.yul\":5101:5168   */\n      tag_151\n        /* \"#utility.yul\":5165:5167   */\n      0x0f\n        /* \"#utility.yul\":5160:5163   */\n      dup4\n        /* \"#utility.yul\":5101:5168   */\n      tag_90\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":5094:5168   */\n      swap2\n      pop\n        /* \"#utility.yul\":5177:5270   */\n      tag_152\n        /* \"#utility.yul\":5266:5269   */\n      dup3\n        /* \"#utility.yul\":5177:5270   */\n      tag_91\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":5295:5297   */\n      0x20\n        /* \"#utility.yul\":5290:5293   */\n      dup3\n        /* \"#utility.yul\":5286:5298   */\n      add\n        /* \"#utility.yul\":5279:5298   */\n      swap1\n      pop\n        /* \"#utility.yul\":4938:5304   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5310:5729   */\n    tag_61:\n        /* \"#utility.yul\":5476:5480   */\n      0x00\n        /* \"#utility.yul\":5514:5516   */\n      0x20\n        /* \"#utility.yul\":5503:5512   */\n      dup3\n        /* \"#utility.yul\":5499:5517   */\n      add\n        /* \"#utility.yul\":5491:5517   */\n      swap1\n      pop\n        /* \"#utility.yul\":5563:5572   */\n      dup2\n        /* \"#utility.yul\":5557:5561   */\n      dup2\n        /* \"#utility.yul\":5553:5573   */\n      sub\n        /* \"#utility.yul\":5549:5550   */\n      0x00\n        /* \"#utility.yul\":5538:5547   */\n      dup4\n        /* \"#utility.yul\":5534:5551   */\n      add\n        /* \"#utility.yul\":5527:5574   */\n      mstore\n        /* \"#utility.yul\":5591:5722   */\n      tag_154\n        /* \"#utility.yul\":5717:5721   */\n      dup2\n        /* \"#utility.yul\":5591:5722   */\n      tag_92\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":5583:5722   */\n      swap1\n      pop\n        /* \"#utility.yul\":5310:5729   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c403e103245380a5c349328cc5d37b64569062049aabe920a5c7ffd6e3ec6f9c64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_190": {
									"entryPoint": null,
									"id": 190,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 150,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:590:3",
										"nodeType": "YulBlock",
										"src": "0:590:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:3",
													"nodeType": "YulBlock",
													"src": "52:81:3",
													"statements": [
														{
															"nativeSrc": "62:65:3",
															"nodeType": "YulAssignment",
															"src": "62:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:3",
																		"nodeType": "YulLiteral",
																		"src": "84:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:3"
																},
																"nativeSrc": "73:54:3",
																"nodeType": "YulFunctionCall",
																"src": "73:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:3",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:3",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:126:3"
											},
											{
												"body": {
													"nativeSrc": "184:51:3",
													"nodeType": "YulBlock",
													"src": "184:51:3",
													"statements": [
														{
															"nativeSrc": "194:35:3",
															"nodeType": "YulAssignment",
															"src": "194:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:3"
																},
																"nativeSrc": "205:24:3",
																"nodeType": "YulFunctionCall",
																"src": "205:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:3",
														"nodeType": "YulTypedName",
														"src": "166:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:3",
														"nodeType": "YulTypedName",
														"src": "176:7:3",
														"type": ""
													}
												],
												"src": "139:96:3"
											},
											{
												"body": {
													"nativeSrc": "306:53:3",
													"nodeType": "YulBlock",
													"src": "306:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:3"
																		},
																		"nativeSrc": "328:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:3"
																},
																"nativeSrc": "316:37:3",
																"nodeType": "YulFunctionCall",
																"src": "316:37:3"
															},
															"nativeSrc": "316:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:3",
														"nodeType": "YulTypedName",
														"src": "294:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:3",
														"nodeType": "YulTypedName",
														"src": "301:3:3",
														"type": ""
													}
												],
												"src": "241:118:3"
											},
											{
												"body": {
													"nativeSrc": "463:124:3",
													"nodeType": "YulBlock",
													"src": "463:124:3",
													"statements": [
														{
															"nativeSrc": "473:26:3",
															"nodeType": "YulAssignment",
															"src": "473:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:3",
																		"nodeType": "YulLiteral",
																		"src": "496:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:3"
																},
																"nativeSrc": "481:18:3",
																"nodeType": "YulFunctionCall",
																"src": "481:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:3",
																				"nodeType": "YulLiteral",
																				"src": "577:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:3"
																		},
																		"nativeSrc": "562:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:3"
																},
																"nativeSrc": "509:71:3",
																"nodeType": "YulFunctionCall",
																"src": "509:71:3"
															},
															"nativeSrc": "509:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:3",
														"nodeType": "YulTypedName",
														"src": "435:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:3",
														"nodeType": "YulTypedName",
														"src": "447:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:3",
														"nodeType": "YulTypedName",
														"src": "458:4:3",
														"type": ""
													}
												],
												"src": "365:222:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610081575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100789190610196565b60405180910390fd5b6100908161009660201b60201c565b506101af565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61018082610157565b9050919050565b61019081610176565b82525050565b5f6020820190506101a95f830184610187565b92915050565b6107a3806101bc5f395ff3fe608060405260043610610054575f3560e01c8063410a1d3214610058578063715018a6146100945780638da5cb5b146100aa578063ed88c68e146100d4578063f2fde38b146100de578063f3fef3a314610106575b5f5ffd5b348015610063575f5ffd5b5061007e6004803603810190610079919061052d565b61012e565b60405161008b9190610570565b60405180910390f35b34801561009f575f5ffd5b506100a8610174565b005b3480156100b5575f5ffd5b506100be610187565b6040516100cb9190610598565b60405180910390f35b6100dc6101ae565b005b3480156100e9575f5ffd5b5061010460048036038101906100ff919061052d565b610247565b005b348015610111575f5ffd5b5061012c60048036038101906101279190610616565b6102cb565b005b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61017c610380565b6101855f610407565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3460015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546101fa9190610681565b92505081905550343373ffffffffffffffffffffffffffffffffffffffff167fdcf384279ea39b6f3a1e3f48d9b09e39e31f61b722ac5ee0417bc0466deec53060405160405180910390a3565b61024f610380565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102bf575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016102b69190610598565b60405180910390fd5b6102c881610407565b50565b6102d3610380565b5f8273ffffffffffffffffffffffffffffffffffffffff16826040516102f8906106e1565b5f6040518083038185875af1925050503d805f8114610332576040519150601f19603f3d011682016040523d82523d5f602084013e610337565b606091505b505090508061037b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103729061074f565b60405180910390fd5b505050565b6103886104c8565b73ffffffffffffffffffffffffffffffffffffffff166103a6610187565b73ffffffffffffffffffffffffffffffffffffffff1614610405576103c96104c8565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016103fc9190610598565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104fc826104d3565b9050919050565b61050c816104f2565b8114610516575f5ffd5b50565b5f8135905061052781610503565b92915050565b5f60208284031215610542576105416104cf565b5b5f61054f84828501610519565b91505092915050565b5f819050919050565b61056a81610558565b82525050565b5f6020820190506105835f830184610561565b92915050565b610592816104f2565b82525050565b5f6020820190506105ab5f830184610589565b92915050565b5f6105bb826104d3565b9050919050565b6105cb816105b1565b81146105d5575f5ffd5b50565b5f813590506105e6816105c2565b92915050565b6105f581610558565b81146105ff575f5ffd5b50565b5f81359050610610816105ec565b92915050565b5f5f6040838503121561062c5761062b6104cf565b5b5f610639858286016105d8565b925050602061064a85828601610602565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61068b82610558565b915061069683610558565b92508282019050808211156106ae576106ad610654565b5b92915050565b5f81905092915050565b50565b5f6106cc5f836106b4565b91506106d7826106be565b5f82019050919050565b5f6106eb826106c1565b9150819050919050565b5f82825260208201905092915050565b7f5769746864726177206661696c656400000000000000000000000000000000005f82015250565b5f610739600f836106f5565b915061074482610705565b602082019050919050565b5f6020820190508181035f8301526107668161072d565b905091905056fea2646970667358221220c403e103245380a5c349328cc5d37b64569062049aabe920a5c7ffd6e3ec6f9c64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90 DUP2 PUSH2 0x96 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1AF JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x180 DUP3 PUSH2 0x157 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x190 DUP2 PUSH2 0x176 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A9 PUSH0 DUP4 ADD DUP5 PUSH2 0x187 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7A3 DUP1 PUSH2 0x1BC PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x54 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x410A1D32 EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0xED88C68E EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x106 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x52D JUMP JUMPDEST PUSH2 0x12E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x570 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xA8 PUSH2 0x174 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xBE PUSH2 0x187 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x598 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0x1AE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x104 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x52D JUMP JUMPDEST PUSH2 0x247 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x111 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x12C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x616 JUMP JUMPDEST PUSH2 0x2CB JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17C PUSH2 0x380 JUMP JUMPDEST PUSH2 0x185 PUSH0 PUSH2 0x407 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST CALLVALUE PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x681 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCF384279EA39B6F3A1E3F48D9B09E39E31F61B722AC5EE0417BC0466DEEC530 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x24F PUSH2 0x380 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2BF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x598 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C8 DUP2 PUSH2 0x407 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2D3 PUSH2 0x380 JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x2F8 SWAP1 PUSH2 0x6E1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x332 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x337 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x37B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0x74F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x388 PUSH2 0x4C8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3A6 PUSH2 0x187 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x405 JUMPI PUSH2 0x3C9 PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0x598 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4FC DUP3 PUSH2 0x4D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x50C DUP2 PUSH2 0x4F2 JUMP JUMPDEST DUP2 EQ PUSH2 0x516 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x527 DUP2 PUSH2 0x503 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x542 JUMPI PUSH2 0x541 PUSH2 0x4CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x54F DUP5 DUP3 DUP6 ADD PUSH2 0x519 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x56A DUP2 PUSH2 0x558 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x583 PUSH0 DUP4 ADD DUP5 PUSH2 0x561 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x592 DUP2 PUSH2 0x4F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5AB PUSH0 DUP4 ADD DUP5 PUSH2 0x589 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5BB DUP3 PUSH2 0x4D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5CB DUP2 PUSH2 0x5B1 JUMP JUMPDEST DUP2 EQ PUSH2 0x5D5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5E6 DUP2 PUSH2 0x5C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5F5 DUP2 PUSH2 0x558 JUMP JUMPDEST DUP2 EQ PUSH2 0x5FF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x610 DUP2 PUSH2 0x5EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x62C JUMPI PUSH2 0x62B PUSH2 0x4CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x639 DUP6 DUP3 DUP7 ADD PUSH2 0x5D8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x64A DUP6 DUP3 DUP7 ADD PUSH2 0x602 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x68B DUP3 PUSH2 0x558 JUMP JUMPDEST SWAP2 POP PUSH2 0x696 DUP4 PUSH2 0x558 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x6AE JUMPI PUSH2 0x6AD PUSH2 0x654 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x6CC PUSH0 DUP4 PUSH2 0x6B4 JUMP JUMPDEST SWAP2 POP PUSH2 0x6D7 DUP3 PUSH2 0x6BE JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6EB DUP3 PUSH2 0x6C1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5769746864726177206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x739 PUSH1 0xF DUP4 PUSH2 0x6F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x744 DUP3 PUSH2 0x705 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x766 DUP2 PUSH2 0x72D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 SUB RJUMPI 0x324 MSTORE8 DUP1 0xA5 0xC3 BLOBHASH ORIGIN DUP13 0xC5 0xD3 PUSH28 0x64569062049AABE920A5C7FFD6E3EC6F9C64736F6C634300081E0033 ",
							"sourceMap": "276:717:2:-:0;;;319:36;;;;;;;;;;341:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;276:717:2;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:3:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;276:717:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 896,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_159": {
									"entryPoint": 1224,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 1031,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@donate_219": {
									"entryPoint": 430,
									"id": 219,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getDonation_231": {
									"entryPoint": 302,
									"id": 231,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 391,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 372,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 583,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_255": {
									"entryPoint": 715,
									"id": 255,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 1496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1538,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_uint256": {
									"entryPoint": 1558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1266,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 1457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1620,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1231,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925": {
									"entryPoint": 1797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 1726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 1474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5732:3",
										"nodeType": "YulBlock",
										"src": "0:5732:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:3",
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nativeSrc": "57:19:3",
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:3",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nativeSrc": "67:9:3",
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:3",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nativeSrc": "177:28:3",
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:3",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:3",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nativeSrc": "187:12:3",
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nativeSrc": "187:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nativeSrc": "300:28:3",
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:3",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:3",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nativeSrc": "310:12:3",
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nativeSrc": "310:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nativeSrc": "379:81:3",
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nativeSrc": "389:65:3",
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:3",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nativeSrc": "400:54:3",
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:3",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:3",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nativeSrc": "511:51:3",
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nativeSrc": "521:35:3",
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nativeSrc": "532:24:3",
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:3",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:3",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nativeSrc": "611:79:3",
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:3",
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:3",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:3",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nativeSrc": "670:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nativeSrc": "670:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nativeSrc": "641:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nativeSrc": "631:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nativeSrc": "624:43:3",
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nativeSrc": "621:63:3",
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:3",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nativeSrc": "748:87:3",
													"nodeType": "YulBlock",
													"src": "748:87:3",
													"statements": [
														{
															"nativeSrc": "758:29:3",
															"nodeType": "YulAssignment",
															"src": "758:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:3"
																},
																"nativeSrc": "767:20:3",
																"nodeType": "YulFunctionCall",
																"src": "767:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:3"
																},
																"nativeSrc": "796:33:3",
																"nodeType": "YulFunctionCall",
																"src": "796:33:3"
															},
															"nativeSrc": "796:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:3",
														"nodeType": "YulTypedName",
														"src": "726:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:3",
														"nodeType": "YulTypedName",
														"src": "734:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:3",
														"nodeType": "YulTypedName",
														"src": "742:5:3",
														"type": ""
													}
												],
												"src": "696:139:3"
											},
											{
												"body": {
													"nativeSrc": "907:263:3",
													"nodeType": "YulBlock",
													"src": "907:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:3",
																"nodeType": "YulBlock",
																"src": "953:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:3"
																			},
																			"nativeSrc": "955:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:3"
																		},
																		"nativeSrc": "955:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:3"
																		},
																		"nativeSrc": "924:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:3",
																		"nodeType": "YulLiteral",
																		"src": "949:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:3"
																},
																"nativeSrc": "920:32:3",
																"nodeType": "YulFunctionCall",
																"src": "920:32:3"
															},
															"nativeSrc": "917:119:3",
															"nodeType": "YulIf",
															"src": "917:119:3"
														},
														{
															"nativeSrc": "1046:117:3",
															"nodeType": "YulBlock",
															"src": "1046:117:3",
															"statements": [
																{
																	"nativeSrc": "1061:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:3",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:3"
																				},
																				"nativeSrc": "1121:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:3"
																		},
																		"nativeSrc": "1100:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:3",
														"nodeType": "YulTypedName",
														"src": "877:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:3",
														"nodeType": "YulTypedName",
														"src": "888:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:3",
														"nodeType": "YulTypedName",
														"src": "900:6:3",
														"type": ""
													}
												],
												"src": "841:329:3"
											},
											{
												"body": {
													"nativeSrc": "1221:32:3",
													"nodeType": "YulBlock",
													"src": "1221:32:3",
													"statements": [
														{
															"nativeSrc": "1231:16:3",
															"nodeType": "YulAssignment",
															"src": "1231:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:3",
																"nodeType": "YulIdentifier",
																"src": "1242:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:3",
														"nodeType": "YulTypedName",
														"src": "1203:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:3",
														"nodeType": "YulTypedName",
														"src": "1213:7:3",
														"type": ""
													}
												],
												"src": "1176:77:3"
											},
											{
												"body": {
													"nativeSrc": "1324:53:3",
													"nodeType": "YulBlock",
													"src": "1324:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:3"
																		},
																		"nativeSrc": "1346:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:3"
																},
																"nativeSrc": "1334:37:3",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:3"
															},
															"nativeSrc": "1334:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:3",
														"nodeType": "YulTypedName",
														"src": "1312:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:3",
														"nodeType": "YulTypedName",
														"src": "1319:3:3",
														"type": ""
													}
												],
												"src": "1259:118:3"
											},
											{
												"body": {
													"nativeSrc": "1481:124:3",
													"nodeType": "YulBlock",
													"src": "1481:124:3",
													"statements": [
														{
															"nativeSrc": "1491:26:3",
															"nodeType": "YulAssignment",
															"src": "1491:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:3"
																},
																"nativeSrc": "1499:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:3",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:3"
																		},
																		"nativeSrc": "1580:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:3"
																},
																"nativeSrc": "1527:71:3",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:3"
															},
															"nativeSrc": "1527:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:3",
														"nodeType": "YulTypedName",
														"src": "1453:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:3",
														"nodeType": "YulTypedName",
														"src": "1465:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:3",
														"nodeType": "YulTypedName",
														"src": "1476:4:3",
														"type": ""
													}
												],
												"src": "1383:222:3"
											},
											{
												"body": {
													"nativeSrc": "1676:53:3",
													"nodeType": "YulBlock",
													"src": "1676:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1693:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1693:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1716:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1716:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1698:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "1698:17:3"
																		},
																		"nativeSrc": "1698:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1698:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1686:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:3"
																},
																"nativeSrc": "1686:37:3",
																"nodeType": "YulFunctionCall",
																"src": "1686:37:3"
															},
															"nativeSrc": "1686:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "1686:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1611:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1664:5:3",
														"nodeType": "YulTypedName",
														"src": "1664:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1671:3:3",
														"nodeType": "YulTypedName",
														"src": "1671:3:3",
														"type": ""
													}
												],
												"src": "1611:118:3"
											},
											{
												"body": {
													"nativeSrc": "1833:124:3",
													"nodeType": "YulBlock",
													"src": "1833:124:3",
													"statements": [
														{
															"nativeSrc": "1843:26:3",
															"nodeType": "YulAssignment",
															"src": "1843:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1855:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1855:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1866:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1851:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1851:3:3"
																},
																"nativeSrc": "1851:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1851:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1843:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1843:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1923:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1923:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1936:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1936:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1947:1:3",
																				"nodeType": "YulLiteral",
																				"src": "1947:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1932:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1932:3:3"
																		},
																		"nativeSrc": "1932:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1932:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1879:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "1879:43:3"
																},
																"nativeSrc": "1879:71:3",
																"nodeType": "YulFunctionCall",
																"src": "1879:71:3"
															},
															"nativeSrc": "1879:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "1879:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1735:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1805:9:3",
														"nodeType": "YulTypedName",
														"src": "1805:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1817:6:3",
														"nodeType": "YulTypedName",
														"src": "1817:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1828:4:3",
														"nodeType": "YulTypedName",
														"src": "1828:4:3",
														"type": ""
													}
												],
												"src": "1735:222:3"
											},
											{
												"body": {
													"nativeSrc": "2016:51:3",
													"nodeType": "YulBlock",
													"src": "2016:51:3",
													"statements": [
														{
															"nativeSrc": "2026:35:3",
															"nodeType": "YulAssignment",
															"src": "2026:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2055:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "2055:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2037:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "2037:17:3"
																},
																"nativeSrc": "2037:24:3",
																"nodeType": "YulFunctionCall",
																"src": "2037:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2026:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "2026:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "1963:104:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1998:5:3",
														"nodeType": "YulTypedName",
														"src": "1998:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2008:7:3",
														"nodeType": "YulTypedName",
														"src": "2008:7:3",
														"type": ""
													}
												],
												"src": "1963:104:3"
											},
											{
												"body": {
													"nativeSrc": "2124:87:3",
													"nodeType": "YulBlock",
													"src": "2124:87:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2189:16:3",
																"nodeType": "YulBlock",
																"src": "2189:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2198:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2198:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2201:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2201:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2191:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2191:6:3"
																			},
																			"nativeSrc": "2191:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2191:12:3"
																		},
																		"nativeSrc": "2191:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2191:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2147:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2147:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2180:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "2180:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nativeSrc": "2154:25:3",
																					"nodeType": "YulIdentifier",
																					"src": "2154:25:3"
																				},
																				"nativeSrc": "2154:32:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2154:32:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2144:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "2144:2:3"
																		},
																		"nativeSrc": "2144:43:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2144:43:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2137:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2137:6:3"
																},
																"nativeSrc": "2137:51:3",
																"nodeType": "YulFunctionCall",
																"src": "2137:51:3"
															},
															"nativeSrc": "2134:71:3",
															"nodeType": "YulIf",
															"src": "2134:71:3"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nativeSrc": "2073:138:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2117:5:3",
														"nodeType": "YulTypedName",
														"src": "2117:5:3",
														"type": ""
													}
												],
												"src": "2073:138:3"
											},
											{
												"body": {
													"nativeSrc": "2277:95:3",
													"nodeType": "YulBlock",
													"src": "2277:95:3",
													"statements": [
														{
															"nativeSrc": "2287:29:3",
															"nodeType": "YulAssignment",
															"src": "2287:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2309:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2309:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2296:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "2296:12:3"
																},
																"nativeSrc": "2296:20:3",
																"nodeType": "YulFunctionCall",
																"src": "2296:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2287:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "2287:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2360:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "2360:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nativeSrc": "2325:34:3",
																	"nodeType": "YulIdentifier",
																	"src": "2325:34:3"
																},
																"nativeSrc": "2325:41:3",
																"nodeType": "YulFunctionCall",
																"src": "2325:41:3"
															},
															"nativeSrc": "2325:41:3",
															"nodeType": "YulExpressionStatement",
															"src": "2325:41:3"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nativeSrc": "2217:155:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2255:6:3",
														"nodeType": "YulTypedName",
														"src": "2255:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2263:3:3",
														"nodeType": "YulTypedName",
														"src": "2263:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2271:5:3",
														"nodeType": "YulTypedName",
														"src": "2271:5:3",
														"type": ""
													}
												],
												"src": "2217:155:3"
											},
											{
												"body": {
													"nativeSrc": "2421:79:3",
													"nodeType": "YulBlock",
													"src": "2421:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2478:16:3",
																"nodeType": "YulBlock",
																"src": "2478:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2487:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2487:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2490:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2490:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2480:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2480:6:3"
																			},
																			"nativeSrc": "2480:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2480:12:3"
																		},
																		"nativeSrc": "2480:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2480:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2444:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2444:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2469:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "2469:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2451:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "2451:17:3"
																				},
																				"nativeSrc": "2451:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2451:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2441:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "2441:2:3"
																		},
																		"nativeSrc": "2441:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2441:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2434:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2434:6:3"
																},
																"nativeSrc": "2434:43:3",
																"nodeType": "YulFunctionCall",
																"src": "2434:43:3"
															},
															"nativeSrc": "2431:63:3",
															"nodeType": "YulIf",
															"src": "2431:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2378:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2414:5:3",
														"nodeType": "YulTypedName",
														"src": "2414:5:3",
														"type": ""
													}
												],
												"src": "2378:122:3"
											},
											{
												"body": {
													"nativeSrc": "2558:87:3",
													"nodeType": "YulBlock",
													"src": "2558:87:3",
													"statements": [
														{
															"nativeSrc": "2568:29:3",
															"nodeType": "YulAssignment",
															"src": "2568:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2590:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2590:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2577:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "2577:12:3"
																},
																"nativeSrc": "2577:20:3",
																"nodeType": "YulFunctionCall",
																"src": "2577:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2568:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "2568:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2633:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "2633:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2606:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "2606:26:3"
																},
																"nativeSrc": "2606:33:3",
																"nodeType": "YulFunctionCall",
																"src": "2606:33:3"
															},
															"nativeSrc": "2606:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "2606:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2506:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2536:6:3",
														"nodeType": "YulTypedName",
														"src": "2536:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2544:3:3",
														"nodeType": "YulTypedName",
														"src": "2544:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2552:5:3",
														"nodeType": "YulTypedName",
														"src": "2552:5:3",
														"type": ""
													}
												],
												"src": "2506:139:3"
											},
											{
												"body": {
													"nativeSrc": "2742:399:3",
													"nodeType": "YulBlock",
													"src": "2742:399:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2788:83:3",
																"nodeType": "YulBlock",
																"src": "2788:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2790:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "2790:77:3"
																			},
																			"nativeSrc": "2790:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2790:79:3"
																		},
																		"nativeSrc": "2790:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2790:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2763:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2763:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2772:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2772:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2759:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2759:3:3"
																		},
																		"nativeSrc": "2759:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2759:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2784:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2784:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2755:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2755:3:3"
																},
																"nativeSrc": "2755:32:3",
																"nodeType": "YulFunctionCall",
																"src": "2755:32:3"
															},
															"nativeSrc": "2752:119:3",
															"nodeType": "YulIf",
															"src": "2752:119:3"
														},
														{
															"nativeSrc": "2881:125:3",
															"nodeType": "YulBlock",
															"src": "2881:125:3",
															"statements": [
																{
																	"nativeSrc": "2896:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2896:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2910:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2910:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2900:6:3",
																			"nodeType": "YulTypedName",
																			"src": "2900:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2925:71:3",
																	"nodeType": "YulAssignment",
																	"src": "2925:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2968:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2979:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2964:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:3"
																				},
																				"nativeSrc": "2964:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2988:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nativeSrc": "2935:28:3",
																			"nodeType": "YulIdentifier",
																			"src": "2935:28:3"
																		},
																		"nativeSrc": "2935:61:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2935:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2925:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "2925:6:3"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3016:118:3",
															"nodeType": "YulBlock",
															"src": "3016:118:3",
															"statements": [
																{
																	"nativeSrc": "3031:16:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3031:16:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3045:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3045:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3035:6:3",
																			"nodeType": "YulTypedName",
																			"src": "3035:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3061:63:3",
																	"nodeType": "YulAssignment",
																	"src": "3061:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3096:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "3096:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3107:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "3107:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3092:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3092:3:3"
																				},
																				"nativeSrc": "3092:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3092:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3116:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "3116:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3071:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "3071:20:3"
																		},
																		"nativeSrc": "3071:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3071:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3061:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "3061:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256",
												"nativeSrc": "2651:490:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2704:9:3",
														"nodeType": "YulTypedName",
														"src": "2704:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2715:7:3",
														"nodeType": "YulTypedName",
														"src": "2715:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2727:6:3",
														"nodeType": "YulTypedName",
														"src": "2727:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2735:6:3",
														"nodeType": "YulTypedName",
														"src": "2735:6:3",
														"type": ""
													}
												],
												"src": "2651:490:3"
											},
											{
												"body": {
													"nativeSrc": "3175:152:3",
													"nodeType": "YulBlock",
													"src": "3175:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3192:1:3",
																		"nodeType": "YulLiteral",
																		"src": "3192:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3195:77:3",
																		"nodeType": "YulLiteral",
																		"src": "3195:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3185:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3185:6:3"
																},
																"nativeSrc": "3185:88:3",
																"nodeType": "YulFunctionCall",
																"src": "3185:88:3"
															},
															"nativeSrc": "3185:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "3185:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3289:1:3",
																		"nodeType": "YulLiteral",
																		"src": "3289:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3292:4:3",
																		"nodeType": "YulLiteral",
																		"src": "3292:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3282:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3282:6:3"
																},
																"nativeSrc": "3282:15:3",
																"nodeType": "YulFunctionCall",
																"src": "3282:15:3"
															},
															"nativeSrc": "3282:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "3282:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3313:1:3",
																		"nodeType": "YulLiteral",
																		"src": "3313:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3316:4:3",
																		"nodeType": "YulLiteral",
																		"src": "3316:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3306:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3306:6:3"
																},
																"nativeSrc": "3306:15:3",
																"nodeType": "YulFunctionCall",
																"src": "3306:15:3"
															},
															"nativeSrc": "3306:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "3306:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3147:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "3147:180:3"
											},
											{
												"body": {
													"nativeSrc": "3377:147:3",
													"nodeType": "YulBlock",
													"src": "3377:147:3",
													"statements": [
														{
															"nativeSrc": "3387:25:3",
															"nodeType": "YulAssignment",
															"src": "3387:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3410:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "3410:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3392:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "3392:17:3"
																},
																"nativeSrc": "3392:20:3",
																"nodeType": "YulFunctionCall",
																"src": "3392:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3387:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "3387:1:3"
																}
															]
														},
														{
															"nativeSrc": "3421:25:3",
															"nodeType": "YulAssignment",
															"src": "3421:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3444:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "3444:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3426:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "3426:17:3"
																},
																"nativeSrc": "3426:20:3",
																"nodeType": "YulFunctionCall",
																"src": "3426:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3421:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "3421:1:3"
																}
															]
														},
														{
															"nativeSrc": "3455:16:3",
															"nodeType": "YulAssignment",
															"src": "3455:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3466:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "3466:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3469:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "3469:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3462:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3462:3:3"
																},
																"nativeSrc": "3462:9:3",
																"nodeType": "YulFunctionCall",
																"src": "3462:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3455:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3455:3:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3495:22:3",
																"nodeType": "YulBlock",
																"src": "3495:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3497:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "3497:16:3"
																			},
																			"nativeSrc": "3497:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3497:18:3"
																		},
																		"nativeSrc": "3497:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "3497:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3487:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "3487:1:3"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3490:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3490:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3484:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "3484:2:3"
																},
																"nativeSrc": "3484:10:3",
																"nodeType": "YulFunctionCall",
																"src": "3484:10:3"
															},
															"nativeSrc": "3481:36:3",
															"nodeType": "YulIf",
															"src": "3481:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3333:191:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3364:1:3",
														"nodeType": "YulTypedName",
														"src": "3364:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3367:1:3",
														"nodeType": "YulTypedName",
														"src": "3367:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3373:3:3",
														"nodeType": "YulTypedName",
														"src": "3373:3:3",
														"type": ""
													}
												],
												"src": "3333:191:3"
											},
											{
												"body": {
													"nativeSrc": "3643:34:3",
													"nodeType": "YulBlock",
													"src": "3643:34:3",
													"statements": [
														{
															"nativeSrc": "3653:18:3",
															"nodeType": "YulAssignment",
															"src": "3653:18:3",
															"value": {
																"name": "pos",
																"nativeSrc": "3668:3:3",
																"nodeType": "YulIdentifier",
																"src": "3668:3:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3653:11:3",
																	"nodeType": "YulIdentifier",
																	"src": "3653:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "3530:147:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3615:3:3",
														"nodeType": "YulTypedName",
														"src": "3615:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3620:6:3",
														"nodeType": "YulTypedName",
														"src": "3620:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3631:11:3",
														"nodeType": "YulTypedName",
														"src": "3631:11:3",
														"type": ""
													}
												],
												"src": "3530:147:3"
											},
											{
												"body": {
													"nativeSrc": "3789:8:3",
													"nodeType": "YulBlock",
													"src": "3789:8:3",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "3683:114:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3781:6:3",
														"nodeType": "YulTypedName",
														"src": "3781:6:3",
														"type": ""
													}
												],
												"src": "3683:114:3"
											},
											{
												"body": {
													"nativeSrc": "3966:235:3",
													"nodeType": "YulBlock",
													"src": "3966:235:3",
													"statements": [
														{
															"nativeSrc": "3976:90:3",
															"nodeType": "YulAssignment",
															"src": "3976:90:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4059:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4059:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4064:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4064:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "3983:75:3",
																	"nodeType": "YulIdentifier",
																	"src": "3983:75:3"
																},
																"nativeSrc": "3983:83:3",
																"nodeType": "YulFunctionCall",
																"src": "3983:83:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3976:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3976:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4164:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4164:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "4075:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "4075:88:3"
																},
																"nativeSrc": "4075:93:3",
																"nodeType": "YulFunctionCall",
																"src": "4075:93:3"
															},
															"nativeSrc": "4075:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "4075:93:3"
														},
														{
															"nativeSrc": "4177:18:3",
															"nodeType": "YulAssignment",
															"src": "4177:18:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4188:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4188:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4193:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4193:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4184:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4184:3:3"
																},
																"nativeSrc": "4184:11:3",
																"nodeType": "YulFunctionCall",
																"src": "4184:11:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4177:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4177:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "3803:398:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3954:3:3",
														"nodeType": "YulTypedName",
														"src": "3954:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3962:3:3",
														"nodeType": "YulTypedName",
														"src": "3962:3:3",
														"type": ""
													}
												],
												"src": "3803:398:3"
											},
											{
												"body": {
													"nativeSrc": "4395:191:3",
													"nodeType": "YulBlock",
													"src": "4395:191:3",
													"statements": [
														{
															"nativeSrc": "4406:154:3",
															"nodeType": "YulAssignment",
															"src": "4406:154:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4556:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4556:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "4413:141:3",
																	"nodeType": "YulIdentifier",
																	"src": "4413:141:3"
																},
																"nativeSrc": "4413:147:3",
																"nodeType": "YulFunctionCall",
																"src": "4413:147:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4406:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4406:3:3"
																}
															]
														},
														{
															"nativeSrc": "4570:10:3",
															"nodeType": "YulAssignment",
															"src": "4570:10:3",
															"value": {
																"name": "pos",
																"nativeSrc": "4577:3:3",
																"nodeType": "YulIdentifier",
																"src": "4577:3:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4570:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4570:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "4207:379:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4382:3:3",
														"nodeType": "YulTypedName",
														"src": "4382:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4391:3:3",
														"nodeType": "YulTypedName",
														"src": "4391:3:3",
														"type": ""
													}
												],
												"src": "4207:379:3"
											},
											{
												"body": {
													"nativeSrc": "4688:73:3",
													"nodeType": "YulBlock",
													"src": "4688:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4705:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4705:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4710:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4710:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4698:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4698:6:3"
																},
																"nativeSrc": "4698:19:3",
																"nodeType": "YulFunctionCall",
																"src": "4698:19:3"
															},
															"nativeSrc": "4698:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "4698:19:3"
														},
														{
															"nativeSrc": "4726:29:3",
															"nodeType": "YulAssignment",
															"src": "4726:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4745:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4745:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4750:4:3",
																		"nodeType": "YulLiteral",
																		"src": "4750:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4741:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4741:3:3"
																},
																"nativeSrc": "4741:14:3",
																"nodeType": "YulFunctionCall",
																"src": "4741:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4726:11:3",
																	"nodeType": "YulIdentifier",
																	"src": "4726:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4592:169:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4660:3:3",
														"nodeType": "YulTypedName",
														"src": "4660:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4665:6:3",
														"nodeType": "YulTypedName",
														"src": "4665:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4676:11:3",
														"nodeType": "YulTypedName",
														"src": "4676:11:3",
														"type": ""
													}
												],
												"src": "4592:169:3"
											},
											{
												"body": {
													"nativeSrc": "4873:59:3",
													"nodeType": "YulBlock",
													"src": "4873:59:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4895:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "4895:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4903:1:3",
																				"nodeType": "YulLiteral",
																				"src": "4903:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4891:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4891:3:3"
																		},
																		"nativeSrc": "4891:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4891:14:3"
																	},
																	{
																		"hexValue": "5769746864726177206661696c6564",
																		"kind": "string",
																		"nativeSrc": "4907:17:3",
																		"nodeType": "YulLiteral",
																		"src": "4907:17:3",
																		"type": "",
																		"value": "Withdraw failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4884:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4884:6:3"
																},
																"nativeSrc": "4884:41:3",
																"nodeType": "YulFunctionCall",
																"src": "4884:41:3"
															},
															"nativeSrc": "4884:41:3",
															"nodeType": "YulExpressionStatement",
															"src": "4884:41:3"
														}
													]
												},
												"name": "store_literal_in_memory_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925",
												"nativeSrc": "4767:165:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4865:6:3",
														"nodeType": "YulTypedName",
														"src": "4865:6:3",
														"type": ""
													}
												],
												"src": "4767:165:3"
											},
											{
												"body": {
													"nativeSrc": "5084:220:3",
													"nodeType": "YulBlock",
													"src": "5084:220:3",
													"statements": [
														{
															"nativeSrc": "5094:74:3",
															"nodeType": "YulAssignment",
															"src": "5094:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5160:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5160:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5165:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5165:2:3",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5101:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "5101:58:3"
																},
																"nativeSrc": "5101:67:3",
																"nodeType": "YulFunctionCall",
																"src": "5101:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5094:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5094:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5266:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5266:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925",
																	"nativeSrc": "5177:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "5177:88:3"
																},
																"nativeSrc": "5177:93:3",
																"nodeType": "YulFunctionCall",
																"src": "5177:93:3"
															},
															"nativeSrc": "5177:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "5177:93:3"
														},
														{
															"nativeSrc": "5279:19:3",
															"nodeType": "YulAssignment",
															"src": "5279:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5290:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5290:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5295:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5295:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5286:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5286:3:3"
																},
																"nativeSrc": "5286:12:3",
																"nodeType": "YulFunctionCall",
																"src": "5286:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5279:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5279:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4938:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5072:3:3",
														"nodeType": "YulTypedName",
														"src": "5072:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5080:3:3",
														"nodeType": "YulTypedName",
														"src": "5080:3:3",
														"type": ""
													}
												],
												"src": "4938:366:3"
											},
											{
												"body": {
													"nativeSrc": "5481:248:3",
													"nodeType": "YulBlock",
													"src": "5481:248:3",
													"statements": [
														{
															"nativeSrc": "5491:26:3",
															"nodeType": "YulAssignment",
															"src": "5491:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5503:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "5503:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5514:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5514:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5499:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5499:3:3"
																},
																"nativeSrc": "5499:18:3",
																"nodeType": "YulFunctionCall",
																"src": "5499:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5491:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "5491:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5538:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5538:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5549:1:3",
																				"nodeType": "YulLiteral",
																				"src": "5549:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5534:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5534:3:3"
																		},
																		"nativeSrc": "5534:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5534:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5557:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "5557:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5563:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5563:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5553:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5553:3:3"
																		},
																		"nativeSrc": "5553:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5553:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5527:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5527:6:3"
																},
																"nativeSrc": "5527:47:3",
																"nodeType": "YulFunctionCall",
																"src": "5527:47:3"
															},
															"nativeSrc": "5527:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "5527:47:3"
														},
														{
															"nativeSrc": "5583:139:3",
															"nodeType": "YulAssignment",
															"src": "5583:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5717:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "5717:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5591:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "5591:124:3"
																},
																"nativeSrc": "5591:131:3",
																"nodeType": "YulFunctionCall",
																"src": "5591:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5583:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "5583:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5310:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5461:9:3",
														"nodeType": "YulTypedName",
														"src": "5461:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5476:4:3",
														"nodeType": "YulTypedName",
														"src": "5476:4:3",
														"type": ""
													}
												],
												"src": "5310:419:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925(memPtr) {\n\n        mstore(add(memPtr, 0), \"Withdraw failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610054575f3560e01c8063410a1d3214610058578063715018a6146100945780638da5cb5b146100aa578063ed88c68e146100d4578063f2fde38b146100de578063f3fef3a314610106575b5f5ffd5b348015610063575f5ffd5b5061007e6004803603810190610079919061052d565b61012e565b60405161008b9190610570565b60405180910390f35b34801561009f575f5ffd5b506100a8610174565b005b3480156100b5575f5ffd5b506100be610187565b6040516100cb9190610598565b60405180910390f35b6100dc6101ae565b005b3480156100e9575f5ffd5b5061010460048036038101906100ff919061052d565b610247565b005b348015610111575f5ffd5b5061012c60048036038101906101279190610616565b6102cb565b005b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61017c610380565b6101855f610407565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3460015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546101fa9190610681565b92505081905550343373ffffffffffffffffffffffffffffffffffffffff167fdcf384279ea39b6f3a1e3f48d9b09e39e31f61b722ac5ee0417bc0466deec53060405160405180910390a3565b61024f610380565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102bf575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016102b69190610598565b60405180910390fd5b6102c881610407565b50565b6102d3610380565b5f8273ffffffffffffffffffffffffffffffffffffffff16826040516102f8906106e1565b5f6040518083038185875af1925050503d805f8114610332576040519150601f19603f3d011682016040523d82523d5f602084013e610337565b606091505b505090508061037b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103729061074f565b60405180910390fd5b505050565b6103886104c8565b73ffffffffffffffffffffffffffffffffffffffff166103a6610187565b73ffffffffffffffffffffffffffffffffffffffff1614610405576103c96104c8565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016103fc9190610598565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104fc826104d3565b9050919050565b61050c816104f2565b8114610516575f5ffd5b50565b5f8135905061052781610503565b92915050565b5f60208284031215610542576105416104cf565b5b5f61054f84828501610519565b91505092915050565b5f819050919050565b61056a81610558565b82525050565b5f6020820190506105835f830184610561565b92915050565b610592816104f2565b82525050565b5f6020820190506105ab5f830184610589565b92915050565b5f6105bb826104d3565b9050919050565b6105cb816105b1565b81146105d5575f5ffd5b50565b5f813590506105e6816105c2565b92915050565b6105f581610558565b81146105ff575f5ffd5b50565b5f81359050610610816105ec565b92915050565b5f5f6040838503121561062c5761062b6104cf565b5b5f610639858286016105d8565b925050602061064a85828601610602565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61068b82610558565b915061069683610558565b92508282019050808211156106ae576106ad610654565b5b92915050565b5f81905092915050565b50565b5f6106cc5f836106b4565b91506106d7826106be565b5f82019050919050565b5f6106eb826106c1565b9150819050919050565b5f82825260208201905092915050565b7f5769746864726177206661696c656400000000000000000000000000000000005f82015250565b5f610739600f836106f5565b915061074482610705565b602082019050919050565b5f6020820190508181035f8301526107668161072d565b905091905056fea2646970667358221220c403e103245380a5c349328cc5d37b64569062049aabe920a5c7ffd6e3ec6f9c64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x54 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x410A1D32 EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0xED88C68E EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x106 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x52D JUMP JUMPDEST PUSH2 0x12E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x570 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xA8 PUSH2 0x174 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xBE PUSH2 0x187 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x598 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0x1AE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x104 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x52D JUMP JUMPDEST PUSH2 0x247 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x111 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x12C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x616 JUMP JUMPDEST PUSH2 0x2CB JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17C PUSH2 0x380 JUMP JUMPDEST PUSH2 0x185 PUSH0 PUSH2 0x407 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST CALLVALUE PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x681 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCF384279EA39B6F3A1E3F48D9B09E39E31F61B722AC5EE0417BC0466DEEC530 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x24F PUSH2 0x380 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2BF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x598 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C8 DUP2 PUSH2 0x407 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2D3 PUSH2 0x380 JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x2F8 SWAP1 PUSH2 0x6E1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x332 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x337 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x37B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0x74F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x388 PUSH2 0x4C8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3A6 PUSH2 0x187 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x405 JUMPI PUSH2 0x3C9 PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0x598 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4FC DUP3 PUSH2 0x4D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x50C DUP2 PUSH2 0x4F2 JUMP JUMPDEST DUP2 EQ PUSH2 0x516 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x527 DUP2 PUSH2 0x503 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x542 JUMPI PUSH2 0x541 PUSH2 0x4CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x54F DUP5 DUP3 DUP6 ADD PUSH2 0x519 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x56A DUP2 PUSH2 0x558 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x583 PUSH0 DUP4 ADD DUP5 PUSH2 0x561 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x592 DUP2 PUSH2 0x4F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5AB PUSH0 DUP4 ADD DUP5 PUSH2 0x589 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5BB DUP3 PUSH2 0x4D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5CB DUP2 PUSH2 0x5B1 JUMP JUMPDEST DUP2 EQ PUSH2 0x5D5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5E6 DUP2 PUSH2 0x5C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5F5 DUP2 PUSH2 0x558 JUMP JUMPDEST DUP2 EQ PUSH2 0x5FF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x610 DUP2 PUSH2 0x5EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x62C JUMPI PUSH2 0x62B PUSH2 0x4CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x639 DUP6 DUP3 DUP7 ADD PUSH2 0x5D8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x64A DUP6 DUP3 DUP7 ADD PUSH2 0x602 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x68B DUP3 PUSH2 0x558 JUMP JUMPDEST SWAP2 POP PUSH2 0x696 DUP4 PUSH2 0x558 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x6AE JUMPI PUSH2 0x6AD PUSH2 0x654 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x6CC PUSH0 DUP4 PUSH2 0x6B4 JUMP JUMPDEST SWAP2 POP PUSH2 0x6D7 DUP3 PUSH2 0x6BE JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6EB DUP3 PUSH2 0x6C1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5769746864726177206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x739 PUSH1 0xF DUP4 PUSH2 0x6F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x744 DUP3 PUSH2 0x705 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x766 DUP2 PUSH2 0x72D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 SUB RJUMPI 0x324 MSTORE8 DUP1 0xA5 0xC3 BLOBHASH ORIGIN DUP13 0xC5 0xD3 PUSH28 0x64569062049AABE920A5C7FFD6E3EC6F9C64736F6C634300081E0033 ",
							"sourceMap": "276:717:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;630:116;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1638:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;484:138:2;;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;754:236:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;630:116;690:4;714:14;:24;729:8;714:24;;;;;;;;;;;;;;;;707:31;;630:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;484:138:2:-;558:9;528:14;:26;543:10;528:26;;;;;;;;;;;;;;;;:39;;;;;;;:::i;:::-;;;;;;;;604:9;592:10;583:31;;;;;;;;;;;;484:138::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;754:236:2:-;1531:13:0;:11;:13::i;:::-;894:12:2::1;911:2;:7;;926:6;911:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;893:44;;;956:7;948:34;;;;;;;;;;;;:::i;:::-;;;;;;;;;820:170;754:236:::0;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:1:-;709:7;735:10;728:17;;656:96;:::o;88:117:3:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:104::-;2008:7;2037:24;2055:5;2037:24;:::i;:::-;2026:35;;1963:104;;;:::o;2073:138::-;2154:32;2180:5;2154:32;:::i;:::-;2147:5;2144:43;2134:71;;2201:1;2198;2191:12;2134:71;2073:138;:::o;2217:155::-;2271:5;2309:6;2296:20;2287:29;;2325:41;2360:5;2325:41;:::i;:::-;2217:155;;;;:::o;2378:122::-;2451:24;2469:5;2451:24;:::i;:::-;2444:5;2441:35;2431:63;;2490:1;2487;2480:12;2431:63;2378:122;:::o;2506:139::-;2552:5;2590:6;2577:20;2568:29;;2606:33;2633:5;2606:33;:::i;:::-;2506:139;;;;:::o;2651:490::-;2727:6;2735;2784:2;2772:9;2763:7;2759:23;2755:32;2752:119;;;2790:79;;:::i;:::-;2752:119;2910:1;2935:61;2988:7;2979:6;2968:9;2964:22;2935:61;:::i;:::-;2925:71;;2881:125;3045:2;3071:53;3116:7;3107:6;3096:9;3092:22;3071:53;:::i;:::-;3061:63;;3016:118;2651:490;;;;;:::o;3147:180::-;3195:77;3192:1;3185:88;3292:4;3289:1;3282:15;3316:4;3313:1;3306:15;3333:191;3373:3;3392:20;3410:1;3392:20;:::i;:::-;3387:25;;3426:20;3444:1;3426:20;:::i;:::-;3421:25;;3469:1;3466;3462:9;3455:16;;3490:3;3487:1;3484:10;3481:36;;;3497:18;;:::i;:::-;3481:36;3333:191;;;;:::o;3530:147::-;3631:11;3668:3;3653:18;;3530:147;;;;:::o;3683:114::-;;:::o;3803:398::-;3962:3;3983:83;4064:1;4059:3;3983:83;:::i;:::-;3976:90;;4075:93;4164:3;4075:93;:::i;:::-;4193:1;4188:3;4184:11;4177:18;;3803:398;;;:::o;4207:379::-;4391:3;4413:147;4556:3;4413:147;:::i;:::-;4406:154;;4577:3;4570:10;;4207:379;;;:::o;4592:169::-;4676:11;4710:6;4705:3;4698:19;4750:4;4745:3;4741:14;4726:29;;4592:169;;;;:::o;4767:165::-;4907:17;4903:1;4895:6;4891:14;4884:41;4767:165;:::o;4938:366::-;5080:3;5101:67;5165:2;5160:3;5101:67;:::i;:::-;5094:74;;5177:93;5266:3;5177:93;:::i;:::-;5295:2;5290:3;5286:12;5279:19;;4938:366;;;:::o;5310:419::-;5476:4;5514:2;5503:9;5499:18;5491:26;;5563:9;5557:4;5553:20;5549:1;5538:9;5534:17;5527:47;5591:131;5717:4;5591:131;:::i;:::-;5583:139;;5310:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "391000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"donate()": "infinite",
								"getDonation(address)": "2807",
								"owner()": "2536",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"withdraw(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 276,
									"end": 993,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 276,
									"end": 993,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 276,
									"end": 993,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 319,
									"end": 355,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 319,
									"end": 355,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 319,
									"end": 355,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 319,
									"end": 355,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 319,
									"end": 355,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 319,
									"end": 355,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 319,
									"end": 355,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 319,
									"end": 355,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 319,
									"end": 355,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 319,
									"end": 355,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 319,
									"end": 355,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 341,
									"end": 351,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 276,
									"end": 993,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 276,
									"end": 993,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 276,
									"end": 993,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 276,
									"end": 993,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 276,
									"end": 993,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 993,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 276,
									"end": 993,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 993,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 993,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 276,
									"end": 993,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 993,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c403e103245380a5c349328cc5d37b64569062049aabe920a5c7ffd6e3ec6f9c64736f6c634300081e0033",
									".code": [
										{
											"begin": 276,
											"end": 993,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 276,
											"end": 993,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 276,
											"end": 993,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 276,
											"end": 993,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 276,
											"end": 993,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 276,
											"end": 993,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 276,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 276,
											"end": 993,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 276,
											"end": 993,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 276,
											"end": 993,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 276,
											"end": 993,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 276,
											"end": 993,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 276,
											"end": 993,
											"name": "PUSH",
											"source": 2,
											"value": "410A1D32"
										},
										{
											"begin": 276,
											"end": 993,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 276,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 276,
											"end": 993,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 276,
											"end": 993,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 276,
											"end": 993,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 276,
											"end": 993,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 276,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 276,
											"end": 993,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 276,
											"end": 993,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 276,
											"end": 993,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 276,
											"end": 993,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 276,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 276,
											"end": 993,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 276,
											"end": 993,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 276,
											"end": 993,
											"name": "PUSH",
											"source": 2,
											"value": "ED88C68E"
										},
										{
											"begin": 276,
											"end": 993,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 276,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 276,
											"end": 993,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 276,
											"end": 993,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 276,
											"end": 993,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 276,
											"end": 993,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 276,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 276,
											"end": 993,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 276,
											"end": 993,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 276,
											"end": 993,
											"name": "PUSH",
											"source": 2,
											"value": "F3FEF3A3"
										},
										{
											"begin": 276,
											"end": 993,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 276,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 276,
											"end": 993,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 276,
											"end": 993,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 276,
											"end": 993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 276,
											"end": 993,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 993,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 993,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 630,
											"end": 746,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 630,
											"end": 746,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 746,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 746,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 630,
											"end": 746,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 630,
											"end": 746,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 630,
											"end": 746,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 630,
											"end": 746,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 630,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 630,
											"end": 746,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 630,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 630,
											"end": 746,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 746,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 630,
											"end": 746,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 630,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 630,
											"end": 746,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 746,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 484,
											"end": 622,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 484,
											"end": 622,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 484,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 484,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 484,
											"end": 622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 484,
											"end": 622,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 484,
											"end": 622,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 484,
											"end": 622,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 754,
											"end": 990,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 754,
											"end": 990,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 754,
											"end": 990,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 754,
											"end": 990,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 754,
											"end": 990,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 754,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 754,
											"end": 990,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 754,
											"end": 990,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 754,
											"end": 990,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 754,
											"end": 990,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 754,
											"end": 990,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 754,
											"end": 990,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 754,
											"end": 990,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 754,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 754,
											"end": 990,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 754,
											"end": 990,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 754,
											"end": 990,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 754,
											"end": 990,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 754,
											"end": 990,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 754,
											"end": 990,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 754,
											"end": 990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 754,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 754,
											"end": 990,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 754,
											"end": 990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 754,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 754,
											"end": 990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 754,
											"end": 990,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 754,
											"end": 990,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 754,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 754,
											"end": 990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 754,
											"end": 990,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 754,
											"end": 990,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 754,
											"end": 990,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 630,
											"end": 746,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 690,
											"end": 694,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 714,
											"end": 728,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 714,
											"end": 738,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 737,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 714,
											"end": 738,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 714,
											"end": 738,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 714,
											"end": 738,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 714,
											"end": 738,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 714,
											"end": 738,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 714,
											"end": 738,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 714,
											"end": 738,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 714,
											"end": 738,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 714,
											"end": 738,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 714,
											"end": 738,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 714,
											"end": 738,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 714,
											"end": 738,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 714,
											"end": 738,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 714,
											"end": 738,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 714,
											"end": 738,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 714,
											"end": 738,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 707,
											"end": 738,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 707,
											"end": 738,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 630,
											"end": 746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 484,
											"end": 622,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 484,
											"end": 622,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 558,
											"end": 567,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 528,
											"end": 542,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 528,
											"end": 554,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 543,
											"end": 553,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 528,
											"end": 554,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 528,
											"end": 554,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 528,
											"end": 554,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 528,
											"end": 554,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 528,
											"end": 554,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 528,
											"end": 554,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 528,
											"end": 554,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 554,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 528,
											"end": 554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 528,
											"end": 554,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 528,
											"end": 554,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 528,
											"end": 554,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 554,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 528,
											"end": 554,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 554,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 528,
											"end": 554,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 567,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 528,
											"end": 567,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 528,
											"end": 567,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 528,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 528,
											"end": 567,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 528,
											"end": 567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 528,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 528,
											"end": 567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 528,
											"end": 567,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 528,
											"end": 567,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 528,
											"end": 567,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 528,
											"end": 567,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 528,
											"end": 567,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 528,
											"end": 567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 528,
											"end": 567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 528,
											"end": 567,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 528,
											"end": 567,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 604,
											"end": 613,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 592,
											"end": 602,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 583,
											"end": 614,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 583,
											"end": 614,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 583,
											"end": 614,
											"name": "PUSH",
											"source": 2,
											"value": "DCF384279EA39B6F3A1E3F48D9B09E39E31F61B722AC5EE0417BC0466DEEC530"
										},
										{
											"begin": 583,
											"end": 614,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 614,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 614,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 614,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 614,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 614,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 614,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 614,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 484,
											"end": 622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 754,
											"end": 990,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 754,
											"end": 990,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 894,
											"end": 906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 911,
											"end": 913,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 911,
											"end": 918,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 911,
											"end": 918,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 926,
											"end": 932,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 911,
											"end": 937,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 911,
											"end": 937,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 893,
											"end": 937,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 893,
											"end": 937,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 893,
											"end": 937,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 956,
											"end": 963,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 948,
											"end": 982,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 948,
											"end": 982,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 948,
											"end": 982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 948,
											"end": 982,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 948,
											"end": 982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 948,
											"end": 982,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 948,
											"end": 982,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 948,
											"end": 982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 948,
											"end": 982,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 948,
											"end": 982,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 948,
											"end": 982,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 948,
											"end": 982,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 948,
											"end": 982,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 948,
											"end": 982,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 948,
											"end": 982,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 948,
											"end": 982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 948,
											"end": 982,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 948,
											"end": 982,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 948,
											"end": 982,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 948,
											"end": 982,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 948,
											"end": 982,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 948,
											"end": 982,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 948,
											"end": 982,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 948,
											"end": 982,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 820,
											"end": 990,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 754,
											"end": 990,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 754,
											"end": 990,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 754,
											"end": 990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1698,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1686,
											"end": 1723,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1832,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1864,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 1949,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1879,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1963,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2015,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2037,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2055,
											"end": 2060,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2037,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2037,
											"end": 2061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2037,
											"end": 2061,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2037,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2026,
											"end": 2061,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2026,
											"end": 2061,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2211,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2073,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 2180,
											"end": 2185,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2154,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2186,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 2154,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2147,
											"end": 2152,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2187,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2134,
											"end": 2205,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2201,
											"end": 2202,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2191,
											"end": 2203,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2205,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2134,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2211,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2217,
											"end": 2372,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2217,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2271,
											"end": 2276,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2315,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2296,
											"end": 2316,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2287,
											"end": 2316,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2287,
											"end": 2316,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2360,
											"end": 2365,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2325,
											"end": 2366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2366,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2325,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2217,
											"end": 2372,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2217,
											"end": 2372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2217,
											"end": 2372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2217,
											"end": 2372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2217,
											"end": 2372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2378,
											"end": 2500,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2378,
											"end": 2500,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2469,
											"end": 2474,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2451,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2449,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2441,
											"end": 2476,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2431,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2431,
											"end": 2494,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2490,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2487,
											"end": 2488,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2431,
											"end": 2494,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2431,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2378,
											"end": 2500,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2378,
											"end": 2500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2645,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2506,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2557,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2596,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2577,
											"end": 2597,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2568,
											"end": 2597,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2568,
											"end": 2597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2633,
											"end": 2638,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2606,
											"end": 2639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2639,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2606,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2645,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2645,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2645,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2645,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2651,
											"end": 3141,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2651,
											"end": 3141,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2733,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2735,
											"end": 2741,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2784,
											"end": 2786,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2772,
											"end": 2781,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2763,
											"end": 2770,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2759,
											"end": 2782,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2787,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2752,
											"end": 2871,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2752,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2752,
											"end": 2871,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2790,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2790,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2790,
											"end": 2869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2790,
											"end": 2869,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2790,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2752,
											"end": 2871,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2752,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2910,
											"end": 2911,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2935,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2935,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2935,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2935,
											"end": 2996,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2935,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2996,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 3006,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3045,
											"end": 3047,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3071,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3116,
											"end": 3123,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3107,
											"end": 3113,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3096,
											"end": 3105,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3092,
											"end": 3114,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3071,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3071,
											"end": 3124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3071,
											"end": 3124,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3071,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3061,
											"end": 3124,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3061,
											"end": 3124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3016,
											"end": 3134,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2651,
											"end": 3141,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2651,
											"end": 3141,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2651,
											"end": 3141,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2651,
											"end": 3141,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2651,
											"end": 3141,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2651,
											"end": 3141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3327,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3147,
											"end": 3327,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3195,
											"end": 3272,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3185,
											"end": 3273,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3292,
											"end": 3296,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 3289,
											"end": 3290,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3282,
											"end": 3297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3316,
											"end": 3320,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3313,
											"end": 3314,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3306,
											"end": 3321,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3333,
											"end": 3524,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3333,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3373,
											"end": 3376,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3392,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3410,
											"end": 3411,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3392,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3392,
											"end": 3412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3392,
											"end": 3412,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3392,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3387,
											"end": 3412,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3387,
											"end": 3412,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3426,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3444,
											"end": 3445,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3426,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3426,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3426,
											"end": 3446,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3426,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3421,
											"end": 3446,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3421,
											"end": 3446,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3469,
											"end": 3470,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3466,
											"end": 3467,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3471,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3471,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3471,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3490,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3487,
											"end": 3488,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3494,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3481,
											"end": 3517,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3481,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3481,
											"end": 3517,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3497,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3497,
											"end": 3515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3515,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3497,
											"end": 3515,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3481,
											"end": 3517,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3481,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3333,
											"end": 3524,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3333,
											"end": 3524,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3333,
											"end": 3524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3333,
											"end": 3524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3333,
											"end": 3524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3677,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3530,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3642,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3668,
											"end": 3671,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3653,
											"end": 3671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3653,
											"end": 3671,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3677,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3677,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3677,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3677,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3683,
											"end": 3797,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 3683,
											"end": 3797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3683,
											"end": 3797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3683,
											"end": 3797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 4201,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 3803,
											"end": 4201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3962,
											"end": 3965,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3983,
											"end": 4066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 4064,
											"end": 4065,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4059,
											"end": 4062,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3983,
											"end": 4066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3983,
											"end": 4066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3983,
											"end": 4066,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 3983,
											"end": 4066,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 4066,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 4066,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4075,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 4164,
											"end": 4167,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4075,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 4075,
											"end": 4168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4075,
											"end": 4168,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 4075,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4193,
											"end": 4194,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4188,
											"end": 4191,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4184,
											"end": 4195,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4177,
											"end": 4195,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4177,
											"end": 4195,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 4201,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 4201,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 4201,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 4201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4207,
											"end": 4586,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4207,
											"end": 4586,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4391,
											"end": 4394,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4413,
											"end": 4560,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 4556,
											"end": 4559,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4560,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 4413,
											"end": 4560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4560,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 4413,
											"end": 4560,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4406,
											"end": 4560,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4406,
											"end": 4560,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4577,
											"end": 4580,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4570,
											"end": 4580,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4570,
											"end": 4580,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4207,
											"end": 4586,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4207,
											"end": 4586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4207,
											"end": 4586,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4207,
											"end": 4586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4592,
											"end": 4761,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 4592,
											"end": 4761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4676,
											"end": 4687,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4710,
											"end": 4716,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4705,
											"end": 4708,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4698,
											"end": 4717,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4750,
											"end": 4754,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4745,
											"end": 4748,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4741,
											"end": 4755,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4726,
											"end": 4755,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4726,
											"end": 4755,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4592,
											"end": 4761,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4592,
											"end": 4761,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4592,
											"end": 4761,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4592,
											"end": 4761,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4592,
											"end": 4761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4932,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 4767,
											"end": 4932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4907,
											"end": 4924,
											"name": "PUSH",
											"source": 3,
											"value": "5769746864726177206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 4903,
											"end": 4904,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4895,
											"end": 4901,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4891,
											"end": 4905,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4884,
											"end": 4925,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4932,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4938,
											"end": 5304,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 4938,
											"end": 5304,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5080,
											"end": 5083,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5101,
											"end": 5168,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 5165,
											"end": 5167,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 5160,
											"end": 5163,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5101,
											"end": 5168,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 5101,
											"end": 5168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5101,
											"end": 5168,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 5101,
											"end": 5168,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5094,
											"end": 5168,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5094,
											"end": 5168,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5177,
											"end": 5270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 5266,
											"end": 5269,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5177,
											"end": 5270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 5177,
											"end": 5270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5177,
											"end": 5270,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 5177,
											"end": 5270,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5295,
											"end": 5297,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5290,
											"end": 5293,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5286,
											"end": 5298,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5279,
											"end": 5298,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5279,
											"end": 5298,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4938,
											"end": 5304,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4938,
											"end": 5304,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4938,
											"end": 5304,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4938,
											"end": 5304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5310,
											"end": 5729,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 5310,
											"end": 5729,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5516,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5503,
											"end": 5512,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5499,
											"end": 5517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5491,
											"end": 5517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5491,
											"end": 5517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5563,
											"end": 5572,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5557,
											"end": 5561,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5553,
											"end": 5573,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5549,
											"end": 5550,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5538,
											"end": 5547,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5534,
											"end": 5551,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5527,
											"end": 5574,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 5717,
											"end": 5721,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 5591,
											"end": 5722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5722,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 5591,
											"end": 5722,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5583,
											"end": 5722,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5583,
											"end": 5722,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5310,
											"end": 5729,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5310,
											"end": 5729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5310,
											"end": 5729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5310,
											"end": 5729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"stage02/task03/BeggingContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"donate()": "ed88c68e",
							"getDonation(address)": "410a1d32",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(address,uint256)": "f3fef3a3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"donateAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"donation\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getDonation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"stage02/task03/BeggingContract.sol\":\"BeggingContract\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"stage02/task03/BeggingContract.sol\":{\"keccak256\":\"0xe1422a11faa769ce579839f220b775f670149455285a86facd63663325f7d770\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e81e2e38e068a62386e4c895be6d55c465d1052fcf021af0d29a16df06f8968e\",\"dweb:/ipfs/QmegF4so7QEGQF1RmKDfgdMLwXjKcL2wAXUhiL7UVrGwpJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "stage02/task03/BeggingContract.sol:BeggingContract",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 194,
								"contract": "stage02/task03/BeggingContract.sol:BeggingContract",
								"label": "donateCountMap",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"stage02/task03/BeggingContract.sol": {
				"ast": {
					"absolutePath": "stage02/task03/BeggingContract.sol",
					"exportedSymbols": {
						"BeggingContract": [
							256
						],
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 257,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:21:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 257,
							"sourceUnit": 148,
							"src": "58:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 181,
										"name": "Ownable",
										"nameLocations": [
											"304:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "304:7:2"
									},
									"id": 182,
									"nodeType": "InheritanceSpecifier",
									"src": "304:7:2"
								}
							],
							"canonicalName": "BeggingContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 256,
							"linearizedBaseContracts": [
								256,
								147,
								177
							],
							"name": "BeggingContract",
							"nameLocation": "285:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "353:2:2",
										"statements": []
									},
									"id": 190,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 185,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "341:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "345:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "341:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 187,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 184,
												"name": "Ownable",
												"nameLocations": [
													"333:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "333:7:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "333:19:2"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "330:2:2"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "353:0:2"
									},
									"scope": 256,
									"src": "319:36:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 194,
									"mutability": "mutable",
									"name": "donateCountMap",
									"nameLocation": "387:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 256,
									"src": "361:40:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 193,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 191,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "370:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "361:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 192,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "381:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "dcf384279ea39b6f3a1e3f48d9b09e39e31f61b722ac5ee0417bc0466deec530",
									"id": 200,
									"name": "donation",
									"nameLocation": "416:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"indexed": true,
												"mutability": "mutable",
												"name": "donateAddress",
												"nameLocation": "441:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "425:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "468:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "455:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "455:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "424:51:2"
									},
									"src": "410:66:2"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "517:105:2",
										"statements": [
											{
												"expression": {
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 203,
															"name": "donateCountMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "528:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 206,
														"indexExpression": {
															"expression": {
																"id": 204,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "543:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "547:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "543:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "528:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 207,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "558:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "562:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "558:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "528:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "528:39:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 212,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "592:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "596:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "592:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 214,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "604:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "608:5:2",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "604:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 211,
														"name": "donation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "583:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "583:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "EmitStatement",
												"src": "578:36:2"
											}
										]
									},
									"functionSelector": "ed88c68e",
									"id": 219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "donate",
									"nameLocation": "493:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "499:2:2"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "517:0:2"
									},
									"scope": 256,
									"src": "484:138:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "696:50:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 226,
														"name": "donateCountMap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "714:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 228,
													"indexExpression": {
														"id": 227,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "729:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "714:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 225,
												"id": 229,
												"nodeType": "Return",
												"src": "707:31:2"
											}
										]
									},
									"functionSelector": "410a1d32",
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDonation",
									"nameLocation": "639:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "659:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "651:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "650:18:2"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "690:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "690:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "689:6:2"
									},
									"scope": 256,
									"src": "630:116:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "820:170:2",
										"statements": [
											{
												"assignments": [
													241,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 241,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "899:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 254,
														"src": "894:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 240,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "894:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 248,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "934:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 242,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "911:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "914:4:2",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "911:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 244,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "926:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "911:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "911:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "893:44:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 250,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "956:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5769746864726177206661696c6564",
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "964:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925",
																"typeString": "literal_string \"Withdraw failed\""
															},
															"value": "Withdraw failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925",
																"typeString": "literal_string \"Withdraw failed\""
															}
														],
														"id": 249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "948:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "948:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 253,
												"nodeType": "ExpressionStatement",
												"src": "948:34:2"
											}
										]
									},
									"functionSelector": "f3fef3a3",
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 238,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 237,
												"name": "onlyOwner",
												"nameLocations": [
													"811:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "811:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "811:9:2"
										}
									],
									"name": "withdraw",
									"nameLocation": "763:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "788:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "772:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "772:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "796:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "791:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "791:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "771:32:2"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:0:2"
									},
									"scope": 256,
									"src": "754:236:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 257,
							"src": "276:717:2",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								200
							]
						}
					],
					"src": "33:960:2"
				},
				"id": 2
			}
		}
	}
}